ID=$2
VCPUS=1
MEMORY=2048
DISK_SIZE=20G
DISK_EXPAND_PART=/dev/vda3

NETWORK_NAME="management"
NETWORK=10.10.10

NETWORK_NAME_2="service"
NETWORK_2=172.16.16

NAME=rhel-8-${ID}
DISK=/var/lib/libvirt/images/${NAME}.qcow2
TEMPLATE=/var/lib/libvirt/images/templates/rhel-8.6-x86_64-kvm.qcow2
OS_VARIANT=rhel8.6

function DISK_CUSTOMIZATIONS {
export LIBGUESTFS_BACKEND=direct
virt-customize -a ${DISK} \
--root-password password:password \
--hostname ${NAME}.${NETWORK_NAME_2}.local \
--edit /etc/ssh/sshd_config:s/PasswordAuthentication\ no/PasswordAuthentication\ yes/g \
--firstboot /tmp/conf-networking.sh \
--ssh-inject root \
--run-command '/usr/bin/yum -y remove cloud-init' \
--run-command 'echo "UseDNS no" >> /etc/ssh/sshd_config' \
--selinux-relabel

rm /tmp/conf-networking.sh
}

ANSIBLE_PATH=ansible

function ANSIBLE_PLAY {
if [ -f ${ANSIBLE_PATH}/locked-vars.yml ]; then

        # Wait for VM to boot
        echo -n "Waiting for ${NAME} to become available."
        for i in {1..30}; do
                sleep .5 && echo -n "."
        done
        echo ""

        # Create hosts file

cat > ansible/hosts << EOF
[host]
${NAME} ansible_host=${NETWORK}.${ID}
EOF

        # Execute playbook
        cd ${ANSIBLE_PATH}
        sudo ansible-playbook --ask-vault-pass register-system.yml
fi
}
